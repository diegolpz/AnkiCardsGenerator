#!/usr/bin/env bash
#
# The first and only parameter of this script must be the file with
# the list of words to translate


rm examplesDeck.csv

# To clean up the input file , no undesired space, the last s/$// deletes the carriage return generated on windows systems
sed -E '/^$/d;s/ +, +/g,/;s/^ +//;s/ +$//;s/$//;y/ЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЯЧСМИТЬБЮ/йцукенгшщзхъфывапролджячсмитьбю/' $1 > in.csv

while IFS= read -r line
do
    tags=$(echo $line | awk -F, '{print $3}' - )
    example=$(csvawk '{print $4}' <<< "$line" | sed 's/^"//;s/"$//')
    exampleTrad=$(csvawk '{print $5}' <<< "$line")
    yandexLink="<a href=\"\"https://translate.yandex.com/?lang=ru-en&text=${example}\"\">[yandx]</a>"
    phraseRus=$(echo ${example} | sed -E 's/([[:alpha:]]*-?[[:alpha:]]*)/<a href=\"\"https:\/\/en.wiktionary.org\/wiki\/\1#Russian\"\">\1<\/a>/g')
    # | sed 's/^"//;s/"$//')
    # echo $example $exampleTrad
    if [[ -n "$example" ]]; then
        echo "${exampleTrad},\"<p>${phraseRus}</p><p>${yandexLink}</p>\",${tags}" >> examplesDeck.csv
    fi
done <<< $(cat in.csv)
rm in.csv
